version: '3.9'

services:
    api:
        build:
            context: ../
            dockerfile: Dockerfile
        image: express-hybrid-auth-api:latest
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
            smtp4dev:
                condition: service_started
        ports:
            - '3001:3000'
        env_file:
            - .env.production.local
        restart: always

    migrate:
        build:
            context: ../
            dockerfile: Dockerfile
        depends_on:
            postgres:
                condition: service_healthy
        env_file:
            - .env.production.local
        command: >
            sh -c "
              echo 'PostgreSQL is healthy, running migrations...'
              npx prisma migrate reset --force
            "
        restart: 'no'

    postgres:
        image: postgres:13.16-bookworm
        environment:
            POSTGRES_USER: admin_pg
            POSTGRES_PASSWORD: password
            POSTGRES_DB: express-hybrid-auth-api-local-prod-db
        volumes:
            - postgres_data:/var/lib/postgresql/data
        restart: always
        ports:
            - '5433:5432'
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U admin_pg -d express-hybrid-auth-api-local-prod-db']
            interval: 5s
            timeout: 5s
            retries: 5
            start_period: 10s

    redis:
        image: redis:6.0.18-alpine
        restart: always
        ports:
            - '6379:6379'

    smtp4dev:
        container_name: local-smtp4dev
        image: rnwood/smtp4dev
        ports:
            - '5000:80'
            - '2525:2525'
        restart: unless-stopped
        environment:
            - Logging__LogLevel__Default=Information

volumes:
    postgres_data:
